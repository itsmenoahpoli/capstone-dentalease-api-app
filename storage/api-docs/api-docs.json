{
    "openapi": "3.0.0",
    "info": {
        "title": "DentalEase API",
        "description": "API for DentalEase application - managing dental services and user authentication",
        "contact": {
            "name": "DentalEase Team",
            "email": "support@dentalease.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Development server"
        }
    ],
    "paths": {
        "/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments",
                "description": "Retrieve a list of all appointments",
                "operationId": "e975113000704ff889fd39adcceb36bf",
                "responses": {
                    "200": {
                        "description": "List of appointments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Appointment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "description": "Create a new appointment",
                "operationId": "f2581d2b5d5ab8807ceb65d47549cf1a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_name",
                                    "patient_email",
                                    "patient_contact",
                                    "purpose",
                                    "schedule_time",
                                    "schedule_date",
                                    "status"
                                ],
                                "properties": {
                                    "patient_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "patient_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "patient_contact": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "example": "Regular dental checkup"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "example": "Patient has sensitive teeth"
                                    },
                                    "schedule_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "schedule_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "past_due",
                                            "cancelled"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Appointment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get a specific appointment",
                "description": "Retrieve a specific appointment by ID",
                "operationId": "62e6b32be0a1e6a7fab0708aef3e02fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Appointment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update an appointment",
                "description": "Update an existing appointment",
                "operationId": "df9efe502863aad3ea47cc918833aaa5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "patient_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "patient_contact": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "example": "Regular dental checkup"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "example": "Patient has sensitive teeth"
                                    },
                                    "schedule_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "schedule_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "past_due",
                                            "cancelled"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Appointment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete an appointment",
                "description": "Delete an existing appointment",
                "operationId": "6b486c1ca5a3fb49659004865f595ca0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Appointment deleted successfully"
                    },
                    "404": {
                        "description": "Appointment not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User sign in",
                "description": "Authenticate user with email and password",
                "operationId": "236556f79990633f3eb6a2bca6b74655",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "session": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/auth/signout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User sign out",
                "description": "Sign out user and invalidate session",
                "operationId": "e5a8eb429b7086b03ec767a976af365b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_id"
                                ],
                                "properties": {
                                    "session_id": {
                                        "type": "string",
                                        "example": "session_123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully signed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/auth/request-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request OTP",
                "description": "Request one-time password for email verification",
                "operationId": "15703470379b5d4d8fb53ae127121e7c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "type"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "signup",
                                            "reset_password"
                                        ],
                                        "example": "signup"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "description": "Verify one-time password",
                "operationId": "1a5f016ab47b000eef2170d88c78ca8c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "maxLength": 6,
                                        "minLength": 6,
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP"
                    }
                }
            }
        },
        "/contact-us": {
            "get": {
                "tags": [
                    "Contact Us"
                ],
                "summary": "Get all contact us entries",
                "description": "Retrieve a list of all contact us entries",
                "operationId": "dd09a3777530977baa3d8f8311141861",
                "responses": {
                    "200": {
                        "description": "List of contact us entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactUs"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contact Us"
                ],
                "summary": "Create a new contact us entry",
                "description": "Create a new contact us entry",
                "operationId": "a5d09ce086647e64f3096a926dc533c4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890",
                                        "nullable": true
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "General Inquiry"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I would like to know more about your services."
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "read",
                                            "replied",
                                            "closed"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact us entry created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactUs"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/contact-us/{id}": {
            "get": {
                "tags": [
                    "Contact Us"
                ],
                "summary": "Get a specific contact us entry",
                "description": "Retrieve a specific contact us entry by ID",
                "operationId": "8ea69dde9b25b0382ca201e32767f2ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact us entry details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactUs"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact us entry not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Contact Us"
                ],
                "summary": "Update a contact us entry",
                "description": "Update an existing contact us entry",
                "operationId": "67b8897d368641b05e5fe941222615f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890",
                                        "nullable": true
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "General Inquiry"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I would like to know more about your services."
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "read",
                                            "replied",
                                            "closed"
                                        ],
                                        "example": "read"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact us entry updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContactUs"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact us entry not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contact Us"
                ],
                "summary": "Delete a contact us entry",
                "description": "Delete a contact us entry",
                "operationId": "4bd154eda4413d8882000fd39335f3b7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact us entry deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact us entry deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact us entry not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/content": {
            "get": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Get all content",
                "description": "Retrieve a list of all CMS content",
                "operationId": "09d5fcaf2ef118b15ee62d6a7d4fa847",
                "responses": {
                    "200": {
                        "description": "List of content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContentData"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Create new content",
                "description": "Create a new CMS content entry",
                "operationId": "9dc847fbe0f28c8ef525d110dd0a3236",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category",
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "clinic_information",
                                            "clinic_announcements",
                                            "latest_developments",
                                            "owner_information",
                                            "our_team"
                                        ],
                                        "example": "clinic_information"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Welcome to DentalEase"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "We provide comprehensive dental care services..."
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "example": {
                                            "contact_email": "info@dentalease.com"
                                        }
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContentData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "422": {
                        "description": "Category already exists"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/content/{id}": {
            "get": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Get a specific content",
                "description": "Retrieve a specific CMS content by ID",
                "operationId": "88386cf3bf273148f2a3174e33bb2d0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContentData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Update content",
                "description": "Update an existing CMS content entry",
                "operationId": "c043efada0ebf97c2f82eb98910784e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "clinic_information",
                                            "clinic_announcements",
                                            "latest_developments",
                                            "owner_information",
                                            "our_team"
                                        ],
                                        "example": "clinic_information"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Welcome to DentalEase"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "We provide comprehensive dental care services..."
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "example": {
                                            "contact_email": "info@dentalease.com"
                                        }
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ContentData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "422": {
                        "description": "Category already exists"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Delete content",
                "description": "Delete a CMS content entry",
                "operationId": "c5840050e03331d532b0d44b2aae130d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Content deleted successfully"
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/content/category/{category}": {
            "get": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Get content by category",
                "description": "Retrieve CMS content by category. For clinic_announcements, returns an array of all announcements. For other categories, returns a single content item.",
                "operationId": "2f3e345fa87195d9c1f7a5c9be2a4080",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "clinic_information",
                                "clinic_announcements",
                                "latest_developments",
                                "owner_information",
                                "our_team"
                            ],
                            "example": "clinic_information"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/ContentData"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ContentData"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Content not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/content/active": {
            "get": {
                "tags": [
                    "Content Management"
                ],
                "summary": "Get active content",
                "description": "Retrieve all active CMS content",
                "operationId": "1c44541cecb33729637bac06358490e9",
                "responses": {
                    "200": {
                        "description": "List of active content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContentData"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get all patients",
                "description": "Retrieve a list of all patients",
                "operationId": "08d12932b0173a86f4345f5c995f2d84",
                "responses": {
                    "200": {
                        "description": "List of patients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Patient"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Create a new patient",
                "description": "Create a new patient record",
                "operationId": "27bf6455482d7bd9706468782d453005",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "contact",
                                    "address",
                                    "gender",
                                    "birthdate",
                                    "citizenship"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, State 12345"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "citizenship": {
                                        "type": "string",
                                        "example": "American"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a specific patient",
                "description": "Retrieve a specific patient by ID",
                "operationId": "955a98fb74bab2b3c83a9aad7fff4c6f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update a patient",
                "description": "Update an existing patient record",
                "operationId": "e7d000157c12d3337e1aa30d90f373b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City, State 12345"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "citizenship": {
                                        "type": "string",
                                        "example": "American"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a patient",
                "description": "Delete a patient record",
                "operationId": "a3ca1450b0bcd46c5180cc8465e4f48a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Patient deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services",
                "description": "Retrieve a list of all dental services",
                "operationId": "c1f61518926466ef0027d0b1bbc40dc0",
                "responses": {
                    "200": {
                        "description": "List of services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Service"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Create a new dental service",
                "operationId": "94779e6e2812be55eaa42d9b03cedd61",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category",
                                    "name",
                                    "price",
                                    "status"
                                ],
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Dental Cleaning"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Regular Cleaning"
                                    },
                                    "price": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 150
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "offered",
                                            "draft"
                                        ],
                                        "example": "offered"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific service",
                "description": "Retrieve a specific dental service by ID",
                "operationId": "19d4f42682a0a6d27aab0e58b8bf9015",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Update an existing dental service",
                "operationId": "8f1c1d3d06cc28f7040eddd5b762f790",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Dental Cleaning"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Premium Cleaning"
                                    },
                                    "price": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 200
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "offered",
                                            "draft"
                                        ],
                                        "example": "offered"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Delete a dental service",
                "operationId": "121999275ba985604e0b74819623c402",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Appointment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "patient_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "patient_email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "patient_contact": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "purpose": {
                        "type": "string",
                        "example": "Regular dental checkup"
                    },
                    "remarks": {
                        "type": "string",
                        "example": "Patient has sensitive teeth"
                    },
                    "schedule_time": {
                        "type": "string",
                        "format": "time",
                        "example": "14:30"
                    },
                    "schedule_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-15"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "active",
                            "past_due",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    }
                },
                "type": "object"
            },
            "ContactUs": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "example": "General Inquiry"
                    },
                    "message": {
                        "type": "string",
                        "example": "I would like to know more about your services."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "read",
                            "replied",
                            "closed"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    }
                },
                "type": "object"
            },
            "ContentData": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "type": "string",
                        "example": "clinic_information"
                    },
                    "category_display": {
                        "type": "string",
                        "example": "Clinic Information"
                    },
                    "title": {
                        "type": "string",
                        "example": "Welcome to DentalEase"
                    },
                    "content": {
                        "type": "string",
                        "example": "We provide comprehensive dental care services..."
                    },
                    "metadata": {
                        "type": "object",
                        "example": {
                            "contact_email": "info@dentalease.com"
                        }
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    }
                },
                "type": "object"
            },
            "Patient": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "contact": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, City, State 12345"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "citizenship": {
                        "type": "string",
                        "example": "American"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    }
                },
                "type": "object"
            },
            "Service": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "type": "string",
                        "example": "Dental Cleaning"
                    },
                    "name": {
                        "type": "string",
                        "example": "Regular Cleaning"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "example": "150.00"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "offered",
                            "draft"
                        ],
                        "example": "offered"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T09:10:00.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "Appointments"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Contact Us",
            "description": "Contact Us"
        },
        {
            "name": "Content Management",
            "description": "Content Management"
        },
        {
            "name": "Patients",
            "description": "Patients"
        },
        {
            "name": "Services",
            "description": "Services"
        }
    ]
}